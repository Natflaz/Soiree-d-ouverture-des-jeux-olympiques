{"ast":null,"code":"import { mapGetters, mapMutations } from 'vuex';\nexport default {\n  computed: {\n    ...mapGetters(['getallType'])\n  },\n  data() {\n    return {\n      selectedTypes: {}\n    };\n  },\n  methods: {\n    ...mapMutations(['SET_SELECTED_TYPE']),\n    updateFilter() {\n      this.$store.commit('SET_SELECTED_TYPE', this.selectedTypes);\n    },\n    getTypePrestationLabel(idType) {\n      const type = this.getallType.find(type => type.id_type_prestation === idType);\n      return type ? type.libelle : 'Type inconnu';\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","computed","data","selectedTypes","methods","updateFilter","$store","commit","getTypePrestationLabel","idType","type","getallType","find","id_type_prestation","libelle"],"sources":["src/components/FilterByTypeComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2>Liste des Prestations</h2>\n    <div class=\"form-check form-switch\"\n         v-for=\"typePrestation in getallType\"\n         :key=\"typePrestation.id_type_prestation\">\n      <input class=\"form-check-input\"\n             type=\"checkbox\"\n             v-model=\"selectedTypes[typePrestation.id_type_prestation]\"\n             @change=\"updateFilter\"\n             :id=\"'flexSwitchCheck' + typePrestation.id_type_prestation\">\n      <label class=\"form-check-label\" :for=\"'flexSwitchCheck' + typePrestation.id_type_prestation\">{{ getTypePrestationLabel(typePrestation.id_type_prestation) }}</label>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\n\nexport default {\n  computed: {\n    ...mapGetters(['getallType']),\n  },\n  data() {\n    return {\n      selectedTypes: {}\n    };\n  },\n  methods: {\n    ...mapMutations(['SET_SELECTED_TYPE']),\n    updateFilter() {\n      this.$store.commit('SET_SELECTED_TYPE', this.selectedTypes);\n    },\n    getTypePrestationLabel(idType) {\n      const type = this.getallType.find(type => type.id_type_prestation === idType);\n      return type ? type.libelle : 'Type inconnu';\n    },\n  }\n};\n</script>"],"mappings":"AAiBA,SAAAA,UAAA,EAAAC,YAAA;AAEA;EACAC,QAAA;IACA,GAAAF,UAAA;EACA;EACAG,KAAA;IACA;MACAC,aAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAJ,YAAA;IACAK,aAAA;MACA,KAAAC,MAAA,CAAAC,MAAA,2BAAAJ,aAAA;IACA;IACAK,uBAAAC,MAAA;MACA,MAAAC,IAAA,QAAAC,UAAA,CAAAC,IAAA,CAAAF,IAAA,IAAAA,IAAA,CAAAG,kBAAA,KAAAJ,MAAA;MACA,OAAAC,IAAA,GAAAA,IAAA,CAAAI,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}