{"ast":null,"code":"import image1 from '../assets/11.jpg';\nimport image2 from '../assets/2.jpg';\nimport image3 from '../assets/3.jpeg';\nexport default {\n  data() {\n    return {\n      images: [image1, image2, image3],\n      currentIndex: 0,\n      direction: 'forward',\n      interval: null\n    };\n  },\n  mounted() {\n    this.interval = setInterval(this.nextSlide, 5000);\n  },\n  beforeDestroy() {\n    clearInterval(this.interval);\n  },\n  computed: {\n    transitionName() {\n      if (this.direction === 'forward') {\n        return \"fade\";\n      } else {\n        return \"fade-reverse\";\n      }\n    }\n  },\n  methods: {\n    resetInterval() {\n      clearInterval(this.interval); // Clear the existing interval\n      this.interval = setInterval(this.nextSlide, 5000); // Set a new interval\n    },\n\n    nextSlide() {\n      this.direction = 'forward';\n      this.currentIndex = (this.currentIndex + 1) % this.images.length;\n      this.resetInterval();\n    },\n    prevSlide() {\n      this.direction = 'backward';\n      this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;\n      this.resetInterval();\n    },\n    setSlide(index) {\n      if (index > this.currentIndex) {\n        this.direction = \"forward\";\n      } else {\n        this.direction = \"backward\";\n      }\n      this.currentIndex = index;\n    }\n  }\n};","map":{"version":3,"names":["image1","image2","image3","data","images","currentIndex","direction","interval","mounted","setInterval","nextSlide","beforeDestroy","clearInterval","computed","transitionName","methods","resetInterval","length","prevSlide","setSlide","index"],"sources":["src/components/PageSlideshow.vue"],"sourcesContent":["<template>\n  <div id=\"carouselExampleControls\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n    <div class=\"carousel-inner\">\n      <div\n          v-for=\"(image, index) in images\" :key=\"index\" :class=\"['carousel-item', { active: currentIndex === index }]\">\n        <transition :name=\"transitionName\">\n          <img v-if=\"currentIndex === index\" :src=\"image\" class=\"d-block w-100\" alt=\"...\">\n        </transition>\n      </div>\n    </div>\n    <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControls\" @click=\"prevSlide\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    </button>\n    <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" @click=\"nextSlide\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    </button>\n    <div class=\"carousel-indicators\">\n      <span\n          v-for=\"(image, index) in images\"\n          :key=\"index\"\n          @click=\"setSlide(index)\"\n          data-bs-target=\"#carouselExampleControls\"\n          :data-bs-slide-to=\"index\"\n          :class=\"{ active: currentIndex === index }\">\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport image1 from '../assets/11.jpg';\nimport image2 from '../assets/2.jpg';\nimport image3 from '../assets/3.jpeg';\n\nexport default {\n  data() {\n    return {\n      images: [image1, image2, image3],\n      currentIndex: 0,\n      direction: 'forward',\n      interval: null,\n    };\n  },\n\n  mounted() {\n    this.interval = setInterval(this.nextSlide, 5000);\n  },\n\n  beforeDestroy() {\n    clearInterval(this.interval);\n  },\n  computed: {\n    transitionName() {\n      if (this.direction ==='forward'){\n        return \"fade\"\n      }else{\n        return \"fade-reverse\"\n      }\n    },\n  },\n  methods: {\n    resetInterval() {\n      clearInterval(this.interval);  // Clear the existing interval\n      this.interval = setInterval(this.nextSlide, 5000);  // Set a new interval\n    },\n    nextSlide() {\n      this.direction = 'forward';\n      this.currentIndex = (this.currentIndex + 1) % this.images.length;\n      this.resetInterval();\n    },\n    prevSlide() {\n      this.direction = 'backward';\n      this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;\n      this.resetInterval();\n    },\n    setSlide(index) {\n      if(index > this.currentIndex){\n        this.direction = \"forward\";\n      }else{\n        this.direction = \"backward\";\n      }\n      this.currentIndex = index;\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n\n\n/* Customizing the carousel control buttons */\n.carousel-inner img {\n  width: 100%; /* cela garantira que l'image prend toute la largeur du conteneur */\n  height: 100vh;\n  object-fit: cover;\n  object-position: center; /* centre l'image dans le cadre */\n}\n\n.carousel-inner {\n  height: 100vh;\n  background-color: black;\n}\n\n\n.carousel-control-prev, .carousel-control-next {\n  background: rgba(0, 0, 0, 0.5);\n  width: 40px;\n  height: 40px;\n  top: 50%;                 /* Centre les boutons verticalement */\n  transform: translateY(-50%); /* Utilise une translation pour les centrer parfaitement */\n}\n\n.carousel-control-prev-icon, .carousel-control-next-icon {\n  background-color: transparent;\n  background-image: none;\n  border: none;\n  font-size: 24px;\n}\n\n.carousel-control-prev-icon:after {\n  content: '\\2190';\n}\n\n.carousel-control-next-icon:after {\n  content: '\\2192';\n}\n\n.carousel-indicators {\n  bottom: 10px;\n}\n\n.carousel-indicators span {\n  width: 10px;\n  height: 10px;\n  margin: 0 5px;\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 50%;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.carousel-indicators .active {\n  background-color: white;\n}\n\n/* Transitions */\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 1s;\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n  z-index: 2;\n}\n.fade-reverse-enter-active, .fade-reverse-leave-active {\n  transition: opacity 1s;\n}\n.fade-reverse-enter, .fade-reverse-leave-to {\n  opacity: 0;\n  z-index: 2;\n}\n.fade-enter-active, .fade-leave-active, .fade-reverse-enter-active, .fade-reverse-leave-active {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n</style>\n"],"mappings":"AA8BA,OAAAA,MAAA;AACA,OAAAC,MAAA;AACA,OAAAC,MAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA,GAAAJ,MAAA,EAAAC,MAAA,EAAAC,MAAA;MACAG,YAAA;MACAC,SAAA;MACAC,QAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAD,QAAA,GAAAE,WAAA,MAAAC,SAAA;EACA;EAEAC,cAAA;IACAC,aAAA,MAAAL,QAAA;EACA;EACAM,QAAA;IACAC,eAAA;MACA,SAAAR,SAAA;QACA;MACA;QACA;MACA;IACA;EACA;EACAS,OAAA;IACAC,cAAA;MACAJ,aAAA,MAAAL,QAAA;MACA,KAAAA,QAAA,GAAAE,WAAA,MAAAC,SAAA;IACA;;IACAA,UAAA;MACA,KAAAJ,SAAA;MACA,KAAAD,YAAA,SAAAA,YAAA,aAAAD,MAAA,CAAAa,MAAA;MACA,KAAAD,aAAA;IACA;IACAE,UAAA;MACA,KAAAZ,SAAA;MACA,KAAAD,YAAA,SAAAA,YAAA,YAAAD,MAAA,CAAAa,MAAA,SAAAb,MAAA,CAAAa,MAAA;MACA,KAAAD,aAAA;IACA;IACAG,SAAAC,KAAA;MACA,IAAAA,KAAA,QAAAf,YAAA;QACA,KAAAC,SAAA;MACA;QACA,KAAAA,SAAA;MACA;MACA,KAAAD,YAAA,GAAAe,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}