{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      selectedTypes: {}\n    };\n  },\n  computed: {\n    ...mapGetters(['getallPrestations', \"getallType\"]),\n    filteredPrestations() {\n      if (Object.keys(this.$store.state.selectedType).every(key => !this.$store.state.selectedType[key])) {\n        return this.getallPrestations;\n      }\n      return this.getallPrestations.filter(prestation => this.$store.state.selectedType[prestation.id_type_prestation]);\n    }\n  },\n  methods: {\n    getTypePrestation(idType) {\n      const typePrestationMap = this.$store.getters.getallType;\n      return typePrestationMap[idType];\n    },\n    getTypePrestationLabel(idType) {\n      const type = this.getallType.find(type => type.id_type_prestation === idType);\n      return type ? type.libelle : 'Type inconnu';\n    },\n    getImageSrc(imageName) {\n      try {\n        return require('@/assets/' + imageName);\n      } catch {\n        return require('@/assets/' + \"4.png\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","selectedTypes","computed","filteredPrestations","Object","keys","$store","state","selectedType","every","key","getallPrestations","filter","prestation","id_type_prestation","methods","getTypePrestation","idType","typePrestationMap","getters","getallType","getTypePrestationLabel","type","find","libelle","getImageSrc","imageName","require"],"sources":["src/components/ShopComponent.vue"],"sourcesContent":["<template>\n<!--  <div class=\"container mt-4\">-->\n<!--    <h2>Liste des Prestations</h2>-->\n<!--    <div class=\"form-check form-switch\"-->\n<!--         v-for=\"typePrestation in getallType\"-->\n<!--         :key=\"typePrestation.id_type_prestation\">-->\n<!--      <input class=\"form-check-input\"-->\n<!--             type=\"checkbox\"-->\n<!--             v-model=\"selectedTypes[typePrestation.id_type_prestation]\"-->\n<!--             :id=\"'flexSwitchCheck' + typePrestation.id_type_prestation\">-->\n<!--      <label class=\"form-check-label\" :for=\"'flexSwitchCheck' + typePrestation.id_type_prestation\">{{ getTypePrestationLabel(typePrestation.id_type_prestation) }}</label>-->\n<!--    </div>-->\n\n    <div class=\"row\">\n      <div class=\"col-md-4 mb-3\" v-for=\"prestation in filteredPrestations\" :key=\"prestation.id_prestation\">\n        <div class=\"card\">\n          <img :src=\"getImageSrc(prestation.image)\" class=\"card-img-top size\" alt=\"Image de la prestation\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ prestation.libelle }}</h5>\n            <p class=\"card-text\">Prix : {{ prestation.prix }}</p>\n            <p class=\"card-text\">Type : {{ getTypePrestationLabel(prestation.id_type_prestation) }}</p>\n            <p class=\"card-text\">Stand : {{ prestation.id_stand }}</p>\n            <p class=\"card-text\">Cr√©neau : {{ prestation.creneau_horaire }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n<!--  </div>-->\n</template>\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      selectedTypes: {}\n    };\n  },\n  computed: {\n    ...mapGetters(['getallPrestations', \"getallType\"]),\n    filteredPrestations() {\n      if (Object.keys(this.$store.state.selectedType).every(key => !this.$store.state.selectedType[key])) {\n        return this.getallPrestations;\n      }\n      return this.getallPrestations.filter(prestation =>\n          this.$store.state.selectedType[prestation.id_type_prestation]\n      );\n    },\n  },\n  methods: {\n    getTypePrestation(idType) {\n      const typePrestationMap = this.$store.getters.getallType;\n      return typePrestationMap[idType];\n    },\n    getTypePrestationLabel(idType) {\n      const type = this.getallType.find(type => type.id_type_prestation === idType);\n      return type ? type.libelle : 'Type inconnu';\n    },\n    getImageSrc(imageName) {\n      try {\n        return require('@/assets/' + imageName);\n      } catch {\n        return require('@/assets/' + \"4.png\");\n      }\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n\n.size{\n  height: 300px;\n}\n\n</style>"],"mappings":"AA8BA,SAAAA,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAH,UAAA;IACAI,oBAAA;MACA,IAAAC,MAAA,CAAAC,IAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA,EAAAC,KAAA,CAAAC,GAAA,UAAAJ,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAE,GAAA;QACA,YAAAC,iBAAA;MACA;MACA,YAAAA,iBAAA,CAAAC,MAAA,CAAAC,UAAA,IACA,KAAAP,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAK,UAAA,CAAAC,kBAAA,CACA;IACA;EACA;EACAC,OAAA;IACAC,kBAAAC,MAAA;MACA,MAAAC,iBAAA,QAAAZ,MAAA,CAAAa,OAAA,CAAAC,UAAA;MACA,OAAAF,iBAAA,CAAAD,MAAA;IACA;IACAI,uBAAAJ,MAAA;MACA,MAAAK,IAAA,QAAAF,UAAA,CAAAG,IAAA,CAAAD,IAAA,IAAAA,IAAA,CAAAR,kBAAA,KAAAG,MAAA;MACA,OAAAK,IAAA,GAAAA,IAAA,CAAAE,OAAA;IACA;IACAC,YAAAC,SAAA;MACA;QACA,OAAAC,OAAA,eAAAD,SAAA;MACA;QACA,OAAAC,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}