{"ast":null,"code":"export default {\n  props: ['isLoginOpen'],\n  computed: {\n    email: {\n      get() {\n        return this.$store.getters.getemail;\n      },\n      set(value) {\n        this.$store.commit('SET_EMAIL', value);\n      }\n    },\n    password: {\n      get() {\n        return this.$store.getters.getpassword;\n      },\n      set(value) {\n        this.$store.commit('SET_PASSWORD', value);\n      }\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$store.commit('SET_LOGIN_MODAL', false);\n    },\n    isEmpty() {\n      return this.email === '' || this.password === '';\n    },\n    isEmailValid() {\n      return this.email.includes('@');\n    },\n    isPasswordValid() {\n      return this.password.length >= 8;\n    },\n    submitForm() {\n      if (this.isEmailValid() && this.isPasswordValid()) {\n        alert('Formulaire envoyé !');\n        console.log(this.email, this.password);\n        this.$store.commit('SET_EMAIL', this.email);\n        this.$store.commit('SET_PASSWORD', this.password);\n        this.$store.commit('SET_USER_CONNECTED', true);\n        this.closeModal();\n      } else {\n        alert('Veuillez remplir correctement le formulaire !');\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","computed","email","get","$store","getters","getemail","set","value","commit","password","getpassword","methods","closeModal","isEmpty","isEmailValid","includes","isPasswordValid","length","submitForm","alert","console","log"],"sources":["src/components/LoginComponent.vue"],"sourcesContent":["<template>\n  <div v-if=\"isLoginOpen\">\n  <div class=\"d-flex justify-content-center align-items-center overlay\">\n    <div class=\"login-box bg-white p-4 rounded shadow\">\n      <button class=\"close-btn\" @click=\"closeModal\">×</button>\n      <h2 class=\"text-center mb-4\">Login</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email:</label>\n          <input type=\"email\" v-model=\"email\" id=\"email\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Mot de passe:</label>\n          <input type=\"password\" v-model=\"password\" id=\"password\" class=\"form-control\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Se connecter</button>\n      </form>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\n\nexport default {\n  props : ['isLoginOpen'],\n  computed: {\n    email: {\n      get() {\n        return this.$store.getters.getemail;\n      },\n      set(value) {\n        this.$store.commit('SET_EMAIL', value);\n      }\n    },\n    password: {\n      get() {\n        return this.$store.getters.getpassword;\n      },\n      set(value) {\n        this.$store.commit('SET_PASSWORD', value);\n      }\n    },\n  },\n  methods: {\n    closeModal() {\n      this.$store.commit('SET_LOGIN_MODAL', false);\n    },\n    isEmpty() {\n      return this.email === '' || this.password === '';\n    },\n    isEmailValid() {\n      return this.email.includes('@')\n    },\n    isPasswordValid() {\n      return this.password.length >= 8\n    },\n    submitForm() {\n      if (this.isEmailValid() && this.isPasswordValid()) {\n        alert('Formulaire envoyé !')\n        console.log(this.email, this.password)\n        this.$store.commit('SET_EMAIL', this.email);\n        this.$store.commit('SET_PASSWORD', this.password);\n        this.$store.commit('SET_USER_CONNECTED', true);\n        this.closeModal();\n      } else {\n        alert('Veuillez remplir correctement le formulaire !')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.close-btn {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  background: transparent;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #555;\n}\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7); /* fond noir transparent */\n  z-index: 1000;\n}\n\n.login-box {\n  width: 300px;\n  max-width: 90%;\n}\n\n</style>"],"mappings":"AAwBA;EACAA,KAAA;EACAC,QAAA;IACAC,KAAA;MACAC,IAAA;QACA,YAAAC,MAAA,CAAAC,OAAA,CAAAC,QAAA;MACA;MACAC,IAAAC,KAAA;QACA,KAAAJ,MAAA,CAAAK,MAAA,cAAAD,KAAA;MACA;IACA;IACAE,QAAA;MACAP,IAAA;QACA,YAAAC,MAAA,CAAAC,OAAA,CAAAM,WAAA;MACA;MACAJ,IAAAC,KAAA;QACA,KAAAJ,MAAA,CAAAK,MAAA,iBAAAD,KAAA;MACA;IACA;EACA;EACAI,OAAA;IACAC,WAAA;MACA,KAAAT,MAAA,CAAAK,MAAA;IACA;IACAK,QAAA;MACA,YAAAZ,KAAA,gBAAAQ,QAAA;IACA;IACAK,aAAA;MACA,YAAAb,KAAA,CAAAc,QAAA;IACA;IACAC,gBAAA;MACA,YAAAP,QAAA,CAAAQ,MAAA;IACA;IACAC,WAAA;MACA,SAAAJ,YAAA,WAAAE,eAAA;QACAG,KAAA;QACAC,OAAA,CAAAC,GAAA,MAAApB,KAAA,OAAAQ,QAAA;QACA,KAAAN,MAAA,CAAAK,MAAA,mBAAAP,KAAA;QACA,KAAAE,MAAA,CAAAK,MAAA,sBAAAC,QAAA;QACA,KAAAN,MAAA,CAAAK,MAAA;QACA,KAAAI,UAAA;MACA;QACAO,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}